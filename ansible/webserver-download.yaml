---
- hosts: webservers
  vars_files: [vault.yml]
  vars:
    ansible_become_pass: "{{ lookup('vars', 'webservers_' + inventory_hostname + '_pass') }}"  # imported from vault
    git_branch: development
    read_deploy_token: glpat-_ckNyuqdmSSJTaLsFoRp
    webserver_public_ip: "{{ lookup('vars', 'webservers_' + inventory_hostname + '_public_ip') }}"
    webserver_database_private_ip: "{{ lookup('vars', 'webservers_' + inventory_hostname + '_database_private_ip') }}"
    database_password: "{{ lookup('vars', 'database_password') }}"
    webserver_port: "{{ lookup('vars', 'webservers_' + inventory_hostname + '_angular_port') }}"
    spring_port: "{{ lookup('vars', 'webservers_' + inventory_hostname + '_spring_port') }}"
    python_port: "{{ lookup('vars', 'webservers_' + inventory_hostname + '_python_port') }}"
    USER: "{{ lookup('env','USER') }}"
  tasks:
    - name: Get the latest pipeline ID
      uri:
        url: https://git.mif.vu.lt/api/v4/projects/4515/pipelines
        headers:
          PRIVATE-TOKEN: '{{ read_deploy_token }}'
        return_content: true
      register: pipelines_response
    - name: Set latest pipeline ID
      set_fact:
        latest_pipeline_id: '{{ (pipelines_response.json | first).id }}'
    - name: Get jobs for the latest pipeline
      uri:
        url: https://git.mif.vu.lt/api/v4/projects/4515/pipelines/{{ latest_pipeline_id }}/jobs
        headers:
          PRIVATE-TOKEN: '{{ read_deploy_token }}'
        return_content: true
      register: jobs_response
    - name: Set job IDs
      set_fact:
        spring_boot_job_id: "{{ (jobs_response.json | selectattr('name', 'equalto', 'build_spring') | first).id }}"
        python_backend_job_id: "{{ (jobs_response.json | selectattr('name', 'equalto', 'build_python') | first).id }}"
        angular_frontend_job_id: "{{ (jobs_response.json | selectattr('name', 'equalto', 'build_angular') | first).id }}"
    - name: Debug Spring Boot job ID
      debug:
        msg: 'Spring Boot job ID: {{ spring_boot_job_id }}'
    - name: Debug Python backend job ID
      debug:
        msg: 'Python backend job ID: {{ python_backend_job_id }}'
    - name: Debug Angular frontend job ID
      debug:
        msg: 'Angular frontend job ID: {{ angular_frontend_job_id }}'
    - name: Download the latest Spring Boot backend artifact
      get_url:
        url: https://git.mif.vu.lt/api/v4/projects/4515/jobs/{{ spring_boot_job_id }}/artifacts
        headers:
          PRIVATE-TOKEN: '{{ read_deploy_token }}'
        dest: /tmp/backend.zip
        mode: '0644'
        force: true
    - name: Unzip the Spring Boot backend artifact
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /opt/
        remote_src: true
      become: true
    - name: Download the latest Python backend artifact
      get_url:
        url: https://git.mif.vu.lt/api/v4/projects/4515/jobs/{{ python_backend_job_id }}/artifacts
        headers:
          PRIVATE-TOKEN: '{{ read_deploy_token }}'
        dest: /tmp/python-backend.zip
        mode: '0644'
        force: true
    - name: Unzip the Python backend artifact
      ansible.builtin.unarchive:
        src: /tmp/python-backend.zip
        dest: /tmp
        remote_src: true
    - name: Find .whl file in /tmp/python-backend
      ansible.builtin.find:
        paths: /tmp/python-dist
        patterns: '*.whl'
      register: found_whl_files
    - name: Install Python backend with pipx
      shell:
        cmd: pipx install {{ found_whl_files.files[0].path }} --force
      when: found_whl_files.matched > 0
    - name: Setup python .env
      copy:
        dest: /home/{{ USER }}/.local/pipx/venvs/straysafe/.env
        content: |
          DATABASE_IP={{ webserver_database_private_ip }}
          DB_PORT=5432
          DB_NAME=straysafe
          DB_USERNAME=straysafe
          DB_PASSWORD={{ database_password }}
    - name: Download the latest Angular frontend artifact
      get_url:
        url: https://git.mif.vu.lt/api/v4/projects/4515/jobs/{{ angular_frontend_job_id }}/artifacts
        headers:
          PRIVATE-TOKEN: '{{ read_deploy_token }}'
        dest: /tmp/frontend.zip
        mode: '0644'
        force: true
    - name: Unzip the Angular frontend artifact
      ansible.builtin.unarchive:
        src: /tmp/frontend.zip
        dest: /var/www/html
        remote_src: true
      become: true
    - name: Change ownership of the Angular frontend directory
      ansible.builtin.file:
        path: /var/www/html/
        owner: www-data
        group: www-data
        recurse: true
      become: true
    - name: Reload spring and python systemd services
      systemd:
        name: '{{ item }}.service'
        state: restarted
      with_items: [spring-boot-app, python-app]
      become: true
    - debug:
        msg:
          - Deployment complete.
          - Frontend is available at http://{{ webserver_public_ip }}:{{ webserver_port
            }}
          - Spring backend is available at http://{{ webserver_public_ip }}:{{ spring_port
            }}
          - Python backend is available at http://{{ webserver_public_ip }}:{{ python_port
            }}
